@page "/"
@using Microsoft.Extensions.Configuration
@using goose2s.State
@using goose2s.Services
@inject NavigationManager navManager
@inject PlaybackService playback
@inject IConfiguration config

@code {    
    [CascadingParameter]
    private SpotifyStateProvider SpotifyStateProvider { get; set; }

    private string callbackUri = "";

    protected override void OnInitialized() {
        var honker = AuthContants.GetAuthKeys(config);
        callbackUri = QueryHelpers.AddQueryString("https://accounts.spotify.com/authorize", honker);
    } 
}

@if (SpotifyStateProvider.CurrentContext == null || SpotifyStateProvider.CurrentContext.Failure)
{
    <h1>You gotta log in foolz</h1>
    <p>Honk honk!</p>
    <a href="@callbackUri">Join the formation</a>
}
else {
    <pre>───▄▀▀▀▄▄▄▄▄▄▄▀▀▀▄───
───█▒▒░░░░░░░░░▒▒█───
────█░░█░░░░░█░░█────
─▄▄──█░░░▀█▀░░░█──▄▄─
█░░█─▀▄░░░░░░░▄▀─█░░█</pre>

<goose2s.Components.NowPlaying></goose2s.Components.NowPlaying>

<h1>Queue</h1>
<goose2s.Components.Queue></goose2s.Components.Queue>

<h1>Search</h1>
<goose2s.Components.Search></goose2s.Components.Search>

}